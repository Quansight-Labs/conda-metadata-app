[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true  # remove this if conda-oci-mirror can be fetched directly from PyPI

[project]
name = "conda-metadata-app"
description = "A streamlit app to query metadata from conda packages"
version = "0.1.0"
authors = [{ name = "jaimergp", email = "jaimergp@users.noreply.github.com" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12"

# please sync the dependencies with pixi.toml and requirements.txt
dependencies = [
  "pydantic-settings>=2.4.0,<3",
  "pydantic>=2.8.2,<3",
  "typing-extensions>=4.12.2,<5",
  "zstandard>=0.23.0,<0.24",
  "py-rattler>=0.7.0,<0.8",
  "conda-forge-metadata>=0.11.0,<0.12",
  "conda-oci-mirror@git+https://github.com/channel-mirrors/conda-oci-mirror.git#egg=25ea3e436f0b0bc5a9c646121efafc9c68e116cd",  # v0.1.0
  "streamlit>=1.39.0,<2",
  "streamlit-searchbox==0.1.20",
  "setuptools",
]

[project.urls]
repository = "https://github.com/Quansight-Labs/conda-metadata-app"

[tool.ruff]
target-version = "py312"
line-length = 99

[tool.ruff.lint]
# E, W = pycodestyle errors and warnings
# F = pyflakes
# I = isort
# D = pydocstyle
# UP = pyupgrade
# ISC = flake8-implicit-str-concat
# TCH = flake8-type-checking
# T10 = flake8-debugger
# FA = flake8-future-annotations
# see also https://docs.astral.sh/ruff/rules/
select = ["E", "W", "F", "I", "D1", "UP", "ISC", "TCH", "T10", "FA"]
# E402 module level import not at top of file
# E501 line too long
# E722 do not use bare 'except'
# E731 do not assign a lambda expression, use a def
# D101 Missing docstring in public class
# D102 Missing docstring in public method
# D103 Missing docstring in public function
# D104 Missing docstring in public package
# D105 Missing docstring in magic method
# D107 Missing docstring in `__init__`
ignore = ["E402", "E501", "E722", "E731", "D101", "D102", "D103", "D104", "D105", "D107", "ISC001"]
extend-per-file-ignores = {"docs/*" = ["D1"], "tests/*" = ["D1"]}
pydocstyle = {convention = "pep257"}
flake8-type-checking = {exempt-modules = [], strict = true}
